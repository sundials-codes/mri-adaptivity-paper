cmake_minimum_required (VERSION 3.20)

project (MRI-Adaptivity-Codes LANGUAGES CXX)

# prohibit in-source build
if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_BINARY_DIR}")
  message(FATAL_ERROR "In-source build prohibited.")
endif()

# default build type
set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Build type")

# Show/hide compiler and flags based on the current build type
macro(show_language_flags lang)
  set(_build_types DEBUG RELEASE RELWITHDEBINFO MINSIZEREL)
  string(TOUPPER "${CMAKE_BUILD_TYPE}" _cmake_build_type)
  foreach(build_type ${_build_types})
    if(${_cmake_build_type} MATCHES "${build_type}")
      message(STATUS "Appending ${lang} ${build_type} flags: ${CMAKE_${lang}_FLAGS_${build_type}}")
      mark_as_advanced(CLEAR CMAKE_${lang}_FLAGS_${build_type})
    else()
      mark_as_advanced(FORCE CMAKE_${lang}_FLAGS_${build_type})
    endif()
  endforeach()
  # show the language compiler and flags
  mark_as_advanced(CLEAR CMAKE_${lang}_COMPILER CMAKE_${lang}_FLAGS)
  # print implicit includes
  message(STATUS "Implicit ${lang} includes: ${CMAKE_${lang}_IMPLICIT_INCLUDE_DIRECTORIES}")
endmacro()

# Simple function to add a given prefix to a list of files
function(add_prefix var prefix)
  set(result)
  foreach(item ${${var}})
    list(APPEND result "${prefix}${item}")
  endforeach()
  set(${var} ${result} PARENT_SCOPE)
endfunction()

show_language_flags(CXX)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Append to the runtime search path (rpath) of installed binaries any
# directories outside the project that are in the linker search path or contain
# linked library files.
option(CMAKE_INSTALL_RPATH_USE_LINK_PATH "Set rpath" ON)
mark_as_advanced(FORCE CMAKE_INSTALL_RPATH_USE_LINK_PATH)

# set installation folders
set(bindir "${CMAKE_CURRENT_SOURCE_DIR}/../bin")

#-----------
# Build these files against the top-level installation sundials-v7.5.0/install
set(SUNDIALS_V730_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/../sundials-v7.5.0/install"
  CACHE PATH "Root directory of SUNDIALS install")

find_package(SUNDIALS REQUIRED
  PATHS
  "${SUNDIALS_V730_ROOT}/lib64/cmake/sundials"
  "${SUNDIALS_V730_ROOT}/lib/cmake/sundials"
  "${SUNDIALS_V730_ROOT}"
  NO_DEFAULT_PATH
)

#-----------
# setup compilation for ark_kpr_nestedmri
set(sources ark_kpr_nestedmri.cpp)
set(target ark_kpr_nestedmri)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_accumerror_brusselator
set(sources ark_test_accumerror_brusselator.cpp)
set(target ark_test_accumerror_brusselator)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_accumerror_kpr
set(sources ark_test_accumerror_kpr.cpp)
set(target ark_test_accumerror_kpr)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_brusselator_mriadapt
set(sources ark_test_brusselator_mriadapt.cpp)
set(target ark_test_brusselator_mriadapt)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_kpr_mriadapt
set(sources ark_test_kpr_mriadapt.cpp)
set(target ark_test_kpr_mriadapt)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_slowerror_brusselator
set(sources ark_test_slowerror_brusselator.cpp)
set(target ark_test_slowerror_brusselator)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})

#-----------
# setup compilation for ark_test_slowerror_kpr
set(sources ark_test_slowerror_kpr.cpp)
set(target ark_test_slowerror_kpr)
add_executable(${target} ${sources})
target_include_directories(${target} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${target} PRIVATE
  SUNDIALS::arkode SUNDIALS::nvecserial)
install(TARGETS ${target} DESTINATION ${bindir})
